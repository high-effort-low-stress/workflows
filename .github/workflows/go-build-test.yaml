name: Go Pipeline

on:
 workflow_call:
  inputs:
    go-main-file:
      description: 'The main Go file to build'
      required: true
      type: string
    go-version:
      description: 'The Go version to use'
      required: true
      type: string
    image-name:
      description: 'The base name for the Docker image (e.g., owner/repo)'
      required: true
      type: string
    docker-context:
      description: 'The build context for Docker (default: .)'
      required: false
      type: string
      default: '.'
    sha:
      description: 'The Git SHA to use for tagging'
      required: true
      type: string

  secrets:
    github-token:
      description: 'The GITHUB_TOKEN for authentication'
      required: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    outputs:
      artifact-name: ${{steps.set-artifact-name.outputs.name}}

    steps:
    ### BUILD 
    - uses: actions/checkout@v4
  
    - name: Set up Environment
      uses: actions/setup-go@v4
      with:
        go-version: ${{ inputs.go-version }}

    - name: Install dependencies
      run: go mod download
      
    - name: Build
      run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app ${{ inputs.go-main-file }}

    - name: Set Artifact name
      id: set-artifact-name
      run: echo "name=app-${{ github.sha }}" >> $GITHUB_OUTPUT

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{steps.set-artifact-name.outputs.name}}
        path: ./app
        retention-days: 1

    ### TEST
    - name: Test
      run: go test -json -v ./... > test-results.json

    - name: Test Reporter
      uses: dorny/test-reporter@v2
      with:
        name: Go Tests
        path: test-results.json
        reporter: golang-json

  ### PACKAGE
  package:
    runs-on: ubuntu-latest
    name: Export Docker Image

    needs: build
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{needs.build.outputs.artifact-name}}

    - name: Package and Push Image    
      uses: high-effort-low-stress/workflows/actions/docker-package@main
      with:
        image-name: ghcr.io/${{ github.repository }}
        sha: ${{ github.sha }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        github-actor: ${{ github.actor }}